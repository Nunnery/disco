import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "com.github.hierynomus.license" version "0.11.0"
    id "com.github.johnrengelman.shadow" version "1.2.0"
    id "groovy"
    id "maven-publish"
}

sourceCompatibility = "1.7"

defaultTasks 'clean', 'licenseFormat', 'check', 'build'

group = "com.tealcube.minecraft.bukkit"
archivesBaseName = "disco"
version = "0.0.1"

repositories {
    mavenCentral()
    maven {
        url "https://hub.spigotmc.org/nexus/content/groups/public/"
    }
}

dependencies {
    compile("org.spigotmc:spigot-api:1.8-R0.1-SNAPSHOT") {
        exclude module: "bungeecord-chat"
    }
    compile "org.codehaus.groovy:groovy-all:2.4.1"
}

processResources {
    filter ReplaceTokens, tokens: [
            VERSION: version + "-" + (System.getenv("BUILD_NUMBER") ?: "0"),
            NAME   : System.getenv("JOB_NAME") ?: project.archivesBaseName
    ]
}

shadowJar {
    baseName = "disco-all"
    classifier = ""

    dependencies {
        exclude(dependency("org.spigotmc:spigot-api"))
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.getDestinationDir()
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

license {
    header file('HEADER')
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

publishing {
    publications {
        java(MavenPublication) {
            artifactId = "disco"
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
        shadow(MavenPublication) {
            artifactId = "disco-all"
            from components.shadow
        }
    }
    repositories {
        maven {
            url "http://tealcube.com/nexus/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}/"
            name "TealCube"
            credentials {
                username System.getenv("nexusUsername") ?: nexusUsername
                password System.getenv("nexusPassword") ?: nexusPassword
            }
        }
    }
}